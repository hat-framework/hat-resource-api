<?php

namespace resource\api\aws;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-10-27 at 10:34:37.
 */
class awsS3ManagerTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var awsS3Manager
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new awsS3Manager;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {}


    /**
     * @covers resource\api\aws\awsS3Manager::setFile
     * @expectedException S3Exception
     * @todo   Implement testSetFile().
     */
    public function testSetFile() {
        foreach($this->files as $name => $data){
            $file = dirname(__FILE__) . DIRECTORY_SEPARATOR. $data['location'];
            $this->assertTrue($this->object->setFile($name, $file, "File $name located in {$data['location']} don't send correctly do aws"));
        }
        
        $this->assertFalse($this->object->setFile('foo', 'bar'), "File foo doesn't exists!");

    }

    /**
     * @covers resource\api\aws\awsS3Manager::getFile
     * @todo   Implement testGetFile().
     * @depends testSetFile
     */
    public function testGetFile() {
        foreach($this->files as $name => $data){
            $file = dirname(__FILE__) . DIRECTORY_SEPARATOR. $data['location'];
            $test = file_get_contents($file);
            $this->assertEquals($this->object->getFile($name), $test, "File $file doesn't be esquals $name");
        }
        
        $this->assertFalse($this->object->getFile('foo'), "File foo doesn't exists!");
    }


    /**
     * @covers resource\api\aws\awsS3Manager::existsFile
     * @todo   Implement testExistsFile().
     * @depends testSetFile
     */
    public function testExistsFile() {
        foreach($this->files as $name => $data){
            $this->assertTrue($this->object->existsFile($name),"File $name cannot be founded");
        }
        $this->assertFalse($this->object->getFile('foo'), "File foo doesn't exists!");
    }

    /**
     * @covers resource\api\aws\awsS3Manager::getFileInfo
     * @todo   Implement testGetFileInfo().
     * @depends testSetFile
     */
    public function testGetFileInfo() {
        foreach($this->files as $name => $data){
            $info = $this->object->getFileInfo($name);
            $this->assertNotEmpty($info,"File $name cannot be founded");
            $this->assertEquals($info['type'],$data['type'],"$name - File type doen't match");
            $this->assertEquals($info['size'],$data['size'],"$name - File size doen't match");
        }
        $this->assertFalse($this->object->getFile('foo'), "File foo doesn't exists!");
    
    }

    /**
     * @covers resource\api\aws\awsS3Manager::listFolder
     * @todo   Implement testListFolder().
     * @depends testSetFile
     * @depends testExistsFile
     * @depends testGetFileInfo
     */
    public function testListFolder() {
        $this->assertEquals($this->object->listFolder($this->folder, false), 
            array("$this->folder/testfile.js","$this->folder/testfile.xhtml")
        );
    }
    
    /**
     * @covers resource\api\aws\awsS3Manager::deleteFile
     * @todo   Implement testDeleteFile().
     * @depends testListFolder
     */
    public function testDeleteFile() {
        foreach($this->files as $name => $data){
            $this->assertTrue($this->object->deleteFile($name),"File $name doesn't deleted!");
        }
        $this->assertTrue($this->object->deleteFile($this->folder),"Folder $this->folder doesn't deleted!");
    }
    
    private $folder = "apiaws";
    private $files = array(
        'apiaws/testfile.js'    => array('size'=>'14' ,'type'=>'text/javascript'         ,'location'=>'testfiles/file.js'),
        'apiaws/testfile.xhtml' => array('size'=>'492','type'=>'application/octet-stream','location'=>'testfiles/file.xhtml'),
    );
}
